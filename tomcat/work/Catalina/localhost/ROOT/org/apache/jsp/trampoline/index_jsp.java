/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.15
 * Generated at: 2016-09-30 11:21:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.trampoline;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.reeltrack.users.*;
import com.reeltrack.reels.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1475232304000L));
    _jspx_dependants.put("jar:file:/www/develop/ECS/web/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098725490000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      com.monumental.trampoline.datasources.DbResources dbResources = null;
      dbResources = (com.monumental.trampoline.datasources.DbResources) _jspx_page_context.getAttribute("dbResources", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (dbResources == null){
        dbResources = new com.monumental.trampoline.datasources.DbResources();
        _jspx_page_context.setAttribute("dbResources", dbResources, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      com.reeltrack.users.RTUserLoginMgr userLoginMgr = null;
      userLoginMgr = (com.reeltrack.users.RTUserLoginMgr) _jspx_page_context.getAttribute("userLoginMgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (userLoginMgr == null){
        userLoginMgr = new com.reeltrack.users.RTUserLoginMgr();
        _jspx_page_context.setAttribute("userLoginMgr", userLoginMgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      com.reeltrack.reels.ReelMgr reelMgr = null;
      reelMgr = (com.reeltrack.reels.ReelMgr) _jspx_page_context.getAttribute("reelMgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (reelMgr == null){
        reelMgr = new com.reeltrack.reels.ReelMgr();
        _jspx_page_context.setAttribute("reelMgr", reelMgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
 userLoginMgr.init(pageContext, dbResources); 
      out.write('\n');
 reelMgr.init(pageContext,dbResources); 
      out.write('\n');
      out.write('\n');
 RTUser user = (RTUser)userLoginMgr.getUser(); 
      out.write('\n');

int reelID = 0;
if(request.getParameter("id")!=null) {
    reelID = Integer.parseInt(request.getParameter("id"));
}
String tagType = "";
if(request.getParameter("type")!=null) {
    tagType = request.getParameter("type");
}
String jobCode = "";
if(request.getParameter("job")!=null) {
    jobCode = request.getParameter("job");
}

boolean checkedout = false;
boolean circuits = false;
if(reelID!=0 && !tagType.equals("") && !jobCode.equals("")) {
	Reel content = new Reel();
	content.setId(reelID);
	content = (Reel)reelMgr.getReel(content);
	if(jobCode.equals(content.getJobCode())) {
		if(tagType.equals("RT")) {
			Reel rtReel = new Reel();
			rtReel.setId(reelID);
			rtReel.setJobCode(jobCode);
      if(content.getStatus().equals(Reel.STATUS_CHECKED_OUT)) {
        checkedout = true;
        if(content.getReelType().equals(Reel.REEL_TYPE_CIRCUIT)) {
          circuits = true;
        }
      }
			session.setAttribute("RT",content);
		}
		if(tagType.equals("PL")) {
			Reel plReel = new Reel();
			plReel.setId(reelID);
			plReel.setJobCode(jobCode);
			session.setAttribute("PL",content);
		}
	} else {
		reelID=0;
	}
}

	boolean isIpad = false;
	String user_agent = request.getHeader("user-agent");
	if(user_agent.contains("iPad")) {
		isIpad = true;
		//session.setAttribute("ipad_user_id", user);
		int userId = 0;
		if(user!=null) {
			userId = user.getId();
		}

	   Cookie cookie = null;
	   Cookie[] cookies = null;
	   // Get an array of Cookies associated with this domain
	   cookies = request.getCookies();
	   if( cookies != null ){
		  for (int i = 0; i < cookies.length; i++){
			 cookie = cookies[i];
			 if((cookie.getName( )).compareTo("user_id") == 0 ){
				cookie.setMaxAge(0); // delete cookie if its already there
				cookie.setValue(String.valueOf(userId));
				response.addCookie(cookie); // re add it with new user id
			 } else {
				 Cookie iPadLoginUser = new Cookie("user_id", String.valueOf(userId));
				response.addCookie(iPadLoginUser);
			}
		  }
	  }
	}

      out.write('\n');
 dbResources.close(); 
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  <title>ECS ReelTrack</title>\n");
      out.write("  <link rel=\"icon\" type=\"image/png\" href=\"myicon.png\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\n");
      out.write("  <!-- Bootstrap -->\n");
      out.write("  <link href=\"interface/css/bootstrap.css\" rel=\"stylesheet\">\n");
      out.write("  <link href=\"interface/css/bootstrap-datetimepicker.min.css\" rel=\"stylesheet\">\n");
      out.write("  <link href=\"interface/css/bootstrap-dialog.css\" rel=\"stylesheet\">\n");
      out.write("  <link href=\"interface/css/tramp.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n");
      out.write("  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n");
      out.write("    <!--[if lt IE 9]>\n");
      out.write("      <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n");
      out.write("      <script src=\"https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js\"></script>\n");
      out.write("      <![endif]-->\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("\n");
      out.write("      <div class=\"container\" style=\"\">\n");
      out.write("\n");
      out.write("        <!-- HEADER ROW START -->\n");
      out.write("        <div class=\"row tramp_header\">\n");
      out.write("          <div id=\"headerContent\" class=\"col-md-12\" style=\"height:85px;background-image: url('interface/images/header1.png');padding:0px;width:100%;border-top-left-radius:5px;border-top-right-radius:5px;\">\n");
      out.write("            <!-- class=\"img-rounded\" -->\n");
      out.write("            ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <!-- HEADER ROW END -->\n");
      out.write("\n");
      out.write("<!--@media (max-width: 767px) {-->\n");
      out.write("        <!-- NAV ROW START -->\n");
      out.write("        <div class=\"row\" style=\"background:white;\">\n");
      out.write("          <div class=\"col-md-12\" style=\"padding:0px;\">\n");
      out.write("            <nav id=\"navContent\" class=\"navbar navbar-inverse tramp_nav_bar\" role=\"navigation\">\n");
      out.write("            ");
      out.write("\n");
      out.write("            </nav>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <!-- NAV ROW END -->\n");
      out.write("\n");
      out.write("\n");
      out.write("        <div class=\"row\" style=\"\">\n");
      out.write("          <div class=\"col-md-12\" style=\"padding-top:0px;padding-left:0px;padding-right:0px;\">\n");
      out.write("            <ul id=\"tabsetContent\" class=\"nav nav-tabs\" style=\"padding-right:15px;padding-left:15px;background:white;\">\n");
      out.write("\n");
      out.write("              <li class=\"disabled\"><a href=\"#home\">&nbsp;</a></li>\n");
      out.write("              ");
      out.write("\n");
      out.write("            </ul>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <!-- border-bottom-left-radius:5px;border-bottom-right-radius:5px;  -->\n");
      out.write("        <div class=\"row\" style=\"border-top-left-radius:0px;border-top-right-radius:0px;background:white;border-left:0px solid lightgray;border-right:0px solid lightgray;border-bottom:0px solid lightgray;\">\n");
      out.write("          <div id=\"tabContent\" class=\"col-md-12\" style=\"padding-top:20px;background:white;min-height:400px;padding-left:20px;padding-right:20px;\">\n");
      out.write("\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row\" style=\"border-bottom-left-radius:5px;border-bottom-right-radius:5px;color:#999999; background:#030623; height:50px;\">\n");
      out.write("          <div class=\"col-md-12\">\n");
      out.write("            <p class=\"pull-left\" style=\"margin-top:15px;\">Copyright 2016 @ECS ReelTrack</p>\n");
      out.write("            <p id=\"footerContent\" class=\"pull-right\" style=\"margin-top:15px;\"></p>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("      </div>\n");
      out.write("\n");
      out.write("    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->\n");
      out.write("    <script src=\"https://code.jquery.com/jquery.js\"></script>\n");
      out.write("    <script src=\"interface/js/bootstrap.min.js\"></script>\n");
      out.write("    <script src=\"interface/js/moment.js\"></script>\n");
      out.write("    <script src=\"interface/js/bootstrap-datetimepicker.min.js\"></script>\n");
      out.write("    <script src=\"interface/js/bootstrap-dialog.js\"></script>\n");
      out.write("    <script src=\"interface/js/jquery.cookie.js\"></script>\n");
      out.write("    <script src=\"interface/js/tramp.js\"></script>\n");
      out.write("    <script>\n");
      out.write("    \tfunction openTag(reelID) {\n");
      out.write("    \t\tvar win = window.open('/trampoline/reeltags/reeltag_image.jsp?reel_param=' + reelID, '_blank');\n");
      out.write("    \t}\n");
      out.write("    </script>\n");
      out.write("    <script>\n");
      out.write("    ");
 if(reelID==0) { 
      out.write("\n");
      out.write("      loadLoginScreen();\n");
      out.write("    ");
 } else { 
      out.write("\n");
      out.write("      ");

      String tempURL = "reels/status.jsp?" +  Reel.PARAM + "=" + reelID;
      if(checkedout) {
        if(circuits) {
          tempURL = "reels/circuits.jsp?" +  Reel.PARAM + "=" + reelID;
        } else {
          tempURL = "reels/quantity.jsp?" +  Reel.PARAM + "=" + reelID;
        }
      }
      
      out.write("\n");
      out.write("      loadDirect('");
      out.print( tempURL );
      out.write("');\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("    </body>\n");
      out.write("    </html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
