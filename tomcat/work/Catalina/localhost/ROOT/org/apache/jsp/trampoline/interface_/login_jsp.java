/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.15
 * Generated at: 2016-09-30 11:21:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.trampoline.interface_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.monumental.trampoline.component.*;
import com.reeltrack.users.*;
import com.reeltrack.customers.*;
import com.reeltrack.reels.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      com.monumental.trampoline.datasources.DbResources dbResources = null;
      dbResources = (com.monumental.trampoline.datasources.DbResources) _jspx_page_context.getAttribute("dbResources", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (dbResources == null){
        dbResources = new com.monumental.trampoline.datasources.DbResources();
        _jspx_page_context.setAttribute("dbResources", dbResources, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      com.reeltrack.users.RTUserLoginMgr userLoginMgr = null;
      userLoginMgr = (com.reeltrack.users.RTUserLoginMgr) _jspx_page_context.getAttribute("userLoginMgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (userLoginMgr == null){
        userLoginMgr = new com.reeltrack.users.RTUserLoginMgr();
        _jspx_page_context.setAttribute("userLoginMgr", userLoginMgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      com.reeltrack.users.RTUserMgr securityMgr = null;
      securityMgr = (com.reeltrack.users.RTUserMgr) _jspx_page_context.getAttribute("securityMgr", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (securityMgr == null){
        securityMgr = new com.reeltrack.users.RTUserMgr();
        _jspx_page_context.setAttribute("securityMgr", securityMgr, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\n');
      com.reeltrack.customers.CustomerMgr customerMgr = null;
      customerMgr = (com.reeltrack.customers.CustomerMgr) _jspx_page_context.getAttribute("customerMgr", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (customerMgr == null){
        customerMgr = new com.reeltrack.customers.CustomerMgr();
        _jspx_page_context.setAttribute("customerMgr", customerMgr, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\n');
 userLoginMgr.init(pageContext,dbResources); 
      out.write('\n');
 securityMgr.init(dbResources); 
      out.write('\n');
 customerMgr.init(pageContext,dbResources); 
      out.write('\n');
 RTUser user = (RTUser)userLoginMgr.getUser(); 
      out.write('\n');

Customer customer = new Customer();
CompEntities customers = customerMgr.searchCustomer(customer, Customer.NAME_COLUMN, true);

RTUser vendor = new RTUser();
vendor.setUserType(RTUser.USER_TYPE_VENDOR);
CompEntities vendors = securityMgr.getUsers(vendor, false);

String tempUrl; //var for url expression

      out.write('\n');
      out.write('\n');

String action = "";
if(request.getParameter("action") != null) {
    action = request.getParameter("action");
}
if(action.equals("login" )) {
    userLoginMgr.login(request.getParameter(RTUser.USERNAME_COLUMN), request.getParameter(RTUser.PASSWORD_COLUMN));
    user = (RTUser)userLoginMgr.getUser();
}
if(action.equals("logout")) {
    session.removeAttribute("RT");
    session.removeAttribute("PL");
    userLoginMgr.logout();
    user = null;
}

      out.write('\n');
  if(action.equals("vendor" )) { 
      out.write('\n');

//userLoginMgr.logout();
vendor = new RTUser();
vendor.setId(Integer.parseInt(request.getParameter("vendor")));
vendor = (RTUser)securityMgr.getUser(vendor, true, false);
userLoginMgr.login(vendor.getUsername(), vendor.getPassword());
user = (RTUser)userLoginMgr.getUser();

      out.write('\n');
 } 
      out.write('\n');
      out.write('\n');
  if(action.equals("customer" )) { 
      out.write('\n');

user.setCustomerId(Integer.parseInt(request.getParameter("customer")));
customer = new Customer();
customer.setId(user.getCustomerId());
customer = customerMgr.getCustomer(customer);
user.setCustomerName(customer.getName());

      out.write('\n');
 } 
      out.write('\n');
  if(action.equals("job" )) { 
      out.write('\n');

int jobId = Integer.parseInt(request.getParameter("job"));
session.setAttribute("LoggedInJobId", jobId);

CustomerJob job = new CustomerJob();
job.setId(jobId);
job = customerMgr.getCustomerJob(job);

user.setJobId(jobId);
user.setJobCode(job.getCode());
user.setJobName(job.getName());
System.out.println("logging in " + user.getJobName());

user.setCustomerId(job.getCustomerId());
customer = new Customer();
customer.setId(job.getCustomerId());
customer = customerMgr.getCustomer(customer);
user.setCustomerName(customer.getName());


Reel rtReel = (Reel)session.getAttribute("RT");
Reel plReel = (Reel)session.getAttribute("PL");
boolean fowardToReelStatus = false;
int reelID = 0;
if(rtReel!=null && rtReel.getJobCode().equals(job.getCode())) {
	fowardToReelStatus = true;
	reelID = rtReel.getId();
	//redirect = request.getContextPath() + "/trampoline/index.jsp?type=RT&id=" + rtReel.getId() + "&job=" + rtReel.getJobCode();
} else if(plReel!=null && plReel.getJobCode().equals(job.getCode())) {
	fowardToReelStatus = true;
	reelID = plReel.getId();
	//redirect = request.getContextPath() + "/trampoline/index.jsp?type=PL&id=" + plReel.getId() + "&job=" + plReel.getJobCode();
} else {
	//redirect = request.getContextPath() + "/trampoline/index.jsp";
}

      out.write('\n');
 } 
      out.write('\n');
      out.write('\n');
 if(action.equals("change_job")) { 
      out.write('\n');

session.removeAttribute("RT");
session.removeAttribute("PL");
session.removeAttribute("LoggedInJobId");
user.setJobId(0);
user.setJobCode("");
user.setJobName("");

      out.write('\n');
 } 
      out.write('\n');
      out.write('\n');
 if(!userLoginMgr.isLoggedIn()) { 
      out.write("\n");
      out.write("    <div class=\"panel panel-primary\">\n");
      out.write("      <div class=\"panel-heading blue_bg\">\n");
      out.write("        <h3 class=\"panel-title\"><a data-toggle=\"collapse\" href=\"#collapse1\">Please Sign In</a></h3>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"panel-body panel-collapse collapse in\" id=\"collapse1\">\n");
      out.write("        <form class=\"form-horizontal\" role=\"form\">\n");
      out.write("          <div class=\"form-group\">\n");
      out.write("            <label style=\"padding-right:0;color:#333333;\" for=\"textfield\" class=\"col-sm-3 control-label\">Username:</label>\n");
      out.write("            <div class=\"col-sm-9\">\n");
      out.write("              <input type=\"email\" class=\"form-control\" name=\"username\" id=\"username\" placeholder=\"\">\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"form-group\">\n");
      out.write("            <label style=\"padding-right:0;color:#333333;\" for=\"textfield\" class=\"col-sm-3 control-label\">Password:</label>\n");
      out.write("            <div class=\"col-sm-9\">\n");
      out.write("              <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" placeholder=\"\">\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"form-group\">\n");
      out.write("            <div class=\"col-sm-offset-3 col-sm-9\">\n");
      out.write("              <button onclick=\"login();\" class=\"btn btn-primary btn-sm\">SIGN IN</button>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </form>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
 } 
      out.write('\n');
      out.write('\n');
 if(userLoginMgr.isLoggedIn() && user.getJobCode().equals("") && !user.isUserType(RTUser.USER_TYPE_VENDOR)) { 
      out.write("\n");
      out.write("    ");
 if(user.isUserType(RTUser.USER_TYPE_ECS)) { 
      out.write("\n");
      out.write("    <div class=\"panel panel-primary\">\n");
      out.write("      <div class=\"panel-heading blue_bg\">\n");
      out.write("        <h3 class=\"panel-title\"><a data-toggle=\"collapse\" href=\"#collapse1\">Select a Vendor</a></h3>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"panel-body panel-collapse collapse in\" id=\"collapse1\">\n");
      out.write("        <form class=\"form-horizontal\" role=\"form\">\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("          <label style=\"padding-right:0;color:#333333;\" for=\"vendor\" class=\"col-sm-3 control-label\">Vendor:</label>\n");
      out.write("          <div class=\"col-sm-9\">\n");
      out.write("          <select class=\"form-control\" id=\"vendor\">\n");
      out.write("              ");
 for(int i=0; i<vendors.howMany(); i++) { 
      out.write("\n");
      out.write("              ");
 vendor = (RTUser)vendors.get(i); 
      out.write("\n");
      out.write("              ");
 String vendorName = vendor.getFname() + " " + vendor.getLname(); 
      out.write("\n");
      out.write("              <option value=\"");
      out.print( new Integer(vendor.getId()).toString() );
      out.write('"');
      out.write('>');
      out.print( vendorName );
      out.write("</option>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("          </select>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("          <div class=\"form-group\">\n");
      out.write("            <div class=\"col-sm-offset-3 col-sm-9\">\n");
      out.write("              <button onclick=\"selectVendor();\" class=\"btn btn-primary btn-sm\">SUBMIT</button>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </form>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"panel panel-primary\">\n");
      out.write("      <div class=\"panel-heading blue_bg\">\n");
      out.write("        <h3 class=\"panel-title\"><a data-toggle=\"collapse\" href=\"#collapse1\">Select a Customer</a></h3>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"panel-body panel-collapse collapse in\" id=\"collapse1\">\n");
      out.write("        <form class=\"form-horizontal\" role=\"form\">\n");
      out.write("            <div class=\"form-group\">\n");
      out.write("              <label style=\"padding-right:0;color:#333333;\" for=\"customer\" class=\"col-sm-3 control-label\">Customer:</label>\n");
      out.write("              <div class=\"col-sm-9\">\n");
      out.write("              <select class=\"form-control\" id=\"customer\">\n");
      out.write("                  ");
 for(int i=0; i<customers.howMany(); i++) { 
      out.write("\n");
      out.write("                  ");
 customer = (Customer)customers.get(i); 
      out.write("\n");
      out.write("                  <option value=\"");
      out.print( new Integer(customer.getId()).toString() );
      out.write('"');
      out.write('>');
      out.print( customer.getName() );
      out.write("</option>\n");
      out.write("                  ");
 } 
      out.write("\n");
      out.write("              </select>\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("          <div class=\"form-group\">\n");
      out.write("            <div class=\"col-sm-offset-3 col-sm-9\">\n");
      out.write("              <button onclick=\"selectCustomer();\" class=\"btn btn-primary btn-sm\">SUBMIT</button>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </form>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("    ");
 } 
      out.write('\n');
      out.write('\n');
      out.write('\n');
 if(user.getCustomerId()!=0) { 
      out.write('\n');

CompEntities custJobs = new CompEntities();
CustomerJob custJob = new CustomerJob();
if(user.isUserType(RTUser.USER_TYPE_ECS)) {
	custJob.setCustomerId(user.getCustomerId());
	custJobs = customerMgr.getCustomerJobs(custJob);
} else {
	custJobs = customerMgr.getJobsAssignedToUser(user);
}

      out.write("\n");
      out.write("<div class=\"panel panel-primary\">\n");
      out.write("  <div class=\"panel-heading blue_bg\">\n");
      out.write("    <h3 class=\"panel-title\"><a data-toggle=\"collapse\" href=\"#collapse1\">Select a Job</a></h3>\n");
      out.write("  </div>\n");
      out.write("  <div class=\"panel-body panel-collapse collapse in\" id=\"collapse1\">\n");
      out.write("    <form class=\"form-horizontal\" role=\"form\">\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("          <label style=\"padding-right:0;color:#333333;\" for=\"job\" class=\"col-sm-3 control-label\">Job:</label>\n");
      out.write("          <div class=\"col-sm-9\">\n");
      out.write("          <select class=\"form-control\" id=\"job\">\n");
      out.write("              ");
 for(int i=0; i<custJobs.howMany(); i++) { 
      out.write("\n");
      out.write("              ");
 custJob = (CustomerJob)custJobs.get(i); 
      out.write("\n");
      out.write("              <option value=\"");
      out.print( new Integer(custJob.getId()).toString() );
      out.write('"');
      out.write('>');
      out.print( custJob.getName() );
      out.write("</option>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("          </select>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      <div class=\"form-group\">\n");
      out.write("        <div class=\"col-sm-offset-3 col-sm-9\">\n");
      out.write("          <button onclick=\"selectJob();\" class=\"btn btn-primary btn-sm\">SIGN IN</button>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </form>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
 } 
      out.write('\n');
      out.write('\n');
      out.write('\n');
 } else if(userLoginMgr.isLoggedIn()) { 
      out.write("\n");
      out.write("\t<h2 style=\"margin-top:0;margin-bottom:20px;color:#016b8d;\">Welcome to ECS ReelTrack, ");
      out.print( user.getFname() );
      out.write(".</h2>\n");
 } 
      out.write('\n');
      out.write('\n');
 dbResources.close(); 
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
