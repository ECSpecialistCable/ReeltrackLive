/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.15
 * Generated at: 2016-08-30 13:56:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.trampoline.reeltags;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.reeltrack.users.*;
import com.reeltrack.reels.*;
import com.monumental.trampoline.component.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import com.reeltrack.utilities.HtmlToImageWriter;
import com.reeltrack.utilities.HTMLToPdfToImageWriter;

public final class reeltag_005fimage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      com.monumental.trampoline.datasources.DbResources dbResources = null;
      dbResources = (com.monumental.trampoline.datasources.DbResources) _jspx_page_context.getAttribute("dbResources", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (dbResources == null){
        dbResources = new com.monumental.trampoline.datasources.DbResources();
        _jspx_page_context.setAttribute("dbResources", dbResources, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      com.reeltrack.reels.ReelMgr reelMgr = null;
      reelMgr = (com.reeltrack.reels.ReelMgr) _jspx_page_context.getAttribute("reelMgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (reelMgr == null){
        reelMgr = new com.reeltrack.reels.ReelMgr();
        _jspx_page_context.setAttribute("reelMgr", reelMgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      com.reeltrack.users.RTUserLoginMgr userLoginMgr = null;
      userLoginMgr = (com.reeltrack.users.RTUserLoginMgr) _jspx_page_context.getAttribute("userLoginMgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (userLoginMgr == null){
        userLoginMgr = new com.reeltrack.users.RTUserLoginMgr();
        _jspx_page_context.setAttribute("userLoginMgr", userLoginMgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
 userLoginMgr.init(pageContext); 
      out.write('\n');
 reelMgr.init(pageContext,dbResources); 
      out.write('\n');
 RTUser user = (RTUser)userLoginMgr.getUser(); 
      out.write('\n');

String basePath = pageContext.getServletContext().getRealPath("/");

// Get the id
int contid = 0;
if(request.getParameter(Reel.PARAM) != null) {
    contid = Integer.parseInt(request.getParameter(Reel.PARAM));
} else {
    String param = "content_id_for_tabset";
    if(request.getParameter(param) != null) {
        contid = Integer.parseInt(request.getParameter(param));
    }
}

// Get the piece of content
Reel content = new Reel();
content.setId(contid);
reelMgr.generateQrCode(content);
content = (Reel)reelMgr.getReel(content);
CompEntities circuits = reelMgr.getReelCircuits(content);
CableTechData techData = reelMgr.getCableTechData(content);

SimpleDateFormat df = new SimpleDateFormat("MM/dd/yyyy");
String dateString = df.format(new Date());

String tempURL; //var for url expression
String pageToGet = "http://" + request.getServerName() + ":" + request.getServerPort() + request.getContextPath() + "/trampoline/reeltags/reeltag.jsp?" + Reel.PARAM + "="+ content.getId();
boolean isRotate = true;
int width= 630;
int height= 330;
HtmlToImageWriter writer = new HtmlToImageWriter();
writer.init(pageContext, dbResources);
String tagFileName = writer.writeImage(content, pageToGet, basePath, content.getReelTagDirectory() + "/", isRotate, width, height);

//HTMLToPdfToImageWriter writer = new HTMLToPdfToImageWriter(pageContext, dbResources);
//writer.writeImage("http://" + request.getServerName() + ":" + request.getServerPort() + request.getContextPath() + "/trampoline/reeltags/reeltag.jsp?" + Reel.PARAM + "="+ content.getId(),basePath, content.getCompEntityDirectory()+"/");


      out.write('\n');
 dbResources.close(); 
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head></head>\n");
      out.write("<body>\n");
      out.write("\n");
 tempURL = "http://" + request.getServerName() + ":" + request.getServerPort() + request.getContextPath() + content.getReelTagDirectory() + "/" + tagFileName; 
      out.write("\n");
      out.write("<img alt=\"reeltag image\" src=\"");
      out.print( tempURL );
      out.write("\" />\n");
      out.write("<script>\n");
      out.write("\twindow.location='");
      out.print( tempURL );
      out.write("';\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
